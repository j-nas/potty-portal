generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [postgis(schema: "public")]
}

model Example {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                 String        @id @default(cuid())
  name               String?
  email              String?       @unique
  emailVerified      DateTime?
  image              String?
  accounts           Account[]
  sessions           Session[]
  cleanlinessRatings Cleanliness[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Bathroom {
  id                 String        @id @default(cuid())
  locationName       String
  additionalInfo     String?
  latitude           Float
  longitude          Float
  address            String
  locationType       LocationType
  purchaseRequired   Boolean
  createdAt          DateTime      @default(now())
  updatedAt          DateTime      @updatedAt
  cleanlinessRatings Cleanliness[]
}

model Cleanliness {
  id         String   @id @default(cuid())
  bathroomId String
  userId     String
  rating     Int
  comment    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  bathroom   Bathroom @relation(fields: [bathroomId], references: [id])
  user       User     @relation(fields: [userId], references: [id])

  @@unique([bathroomId, userId])
}

enum LocationType {
  BUSINESS
  PUBLIC
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}
